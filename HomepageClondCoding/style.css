:root {
    /* 
    웹 문서에서 공통으로 사용될 속성을 미리 변수에 선언한다.
    형식은 아래와 같다.
    */
    /* Color */
    --white-color:#fff;
    --black-color:#140a00;
    --blue-color:#045fd4;
    --red-color:#ff0000;
    --grey-dark-color:#909090;
    --grey-light-color:#e0e0e0;

    /* Size */
    --padding: 12px;
    --avatar-size:36px; /* 증명사진 */

    /* Font size */
    --font-large:18px;
    --font-medium:14px;
    --font-small:12px;
    --font-micro:10px;
}

*{
    padding:0;
    margin:0;

    /*
    content-box : 콘텐트 영역을 기준으로 크기를 정함
    border-box : 테두리를 기준으로 크기를 정함
    initial : 기본값으로 설정
    inherit : 부모 요소의 속성값을 상속받음
    */
    box-sizing:border-box;
}

body{
    /* 
    글꼴을 여러개 사용할 경우 첫번쨰 글꼴로 표현할 수 없는 것만 다음 글꼴을
    사용
    */
    font-family: Ubuntu, fantasy;
}

ul {
    list-style: none;
}

button,
button:focus{
    border:none;
    cursor:pointer;
    outline:none;
}

/* Header */
header{
    /*
    flex : block
    inline-flex : inline
    https://www.w3schools.com/css/css3_flexbox_container.asp
    */
    display: flex;

    /*
    justify-content => 
    1. start (기본값)
    2. center(중간 정렬)
    3. space-between (양쪽 끝 정렬)
    4. space-aroung
    5. space-evenly
    */
    justify-content: space-between;
    padding: var(--padding);
    background-color: var(--black-color);
    color : var(--white-color);
}

header .logo{
    font-size: var(--font-large);
}

header .logo i{
    color:var(--red-color);
}

header .icons .fa-search{
    margin-right: var(--padding);
}

/* 
SASS & LESS
PostCSS
*/

/* Video Player */
.player{
    /*
    sticky 속성은 필수적으로 top, bottom, left, right들 중에 하나를
     필수적으로 설정해주어야 합니다. sitcky로 설정된 영역은 설정된 위치
     (예 top: 0px)에 도달하기 전까지는 static 속성처럼 행동하다가 
     설정된 위치에 다다르면 fixed 속성처럼 행동하는 속성입니다.
    */
    position: sticky;
    top: 0;
    text-align:center;
    background-color:var(--black-color);
}

.player video {
    width: 100%;
    height:100%;
    max-width: 1000px;
}

body > .info {
    padding:var(--padding);
}

.info .metadata .hashtags{
    display : flex;
    font-size:  var(--font-small);
    color:var(--blue-color);
}

.info .metadata .hashtags li{
    margin-right : var(--padding);
}

.info .metadata .titleAndButton {
    display: flex;
}

.info .metadata .titleAndButton .title{
    font-size: var(--font-medium);
    display: -webkit-box;

    /*
    https://developer.mozilla.org/en-US/docs/Web/CSS/box-orient
    https://developer.mozilla.org/ko/docs/Web/CSS/-webkit-line-clamp
     */
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;      /* 제목을 2줄로 제한, 버튼을 눌러야 제목이 모두 나옴 */
    overflow: hidden;
    margin-right:var(--padding);
}

.info .metadata .titleAndButton .moreBtn{
    height:100%;
}

.info .views {
    font-size: var(--font-small);
    color: var(--grey-dark-color);
}


/* Action Buttons */
.info .actions {
    display: flex;
    justify-content: space-around;
    margin: var(--padding) 0;
}

.info .actions button{
    display: flex;
    flex-direction: column;
    font-size : var(--font-small);
}

.info .actions button i{
    margin: 0 auto;
    margin-bottom: calc(var(--padding) / 2);
    font-size : 16px;
    color: var(--grey-dark-color);
}

.actions button i.active{
    color:var(--blue-color);
}


/* Channel Description */
.channel {
    display:flex;
    justify-content: space-between;
    border-top:1px solid var(--grey-light-color);
    border-bottom:1px solid var(--grey-light-color)
}

.channel .metadata{
    display:flex;

    /*
    https://developer.mozilla.org/en-US/docs/Web/CSS/align-items
    */
    align-items: center;
}

.channel .metadata .info{
    display:flex;
    flex-direction : column;
}
.channel .metadata img{
    width:var(--avatar-size);
    height: var(--avatar-size);
    border-radius: 50%;
}

.channel .metadata .info .name {
    font-size: var(--font-medium);
}

.channel .metadata .info .subscribers{
    font-size: var(--font-small);
    color: var(--grey-dark-color);
}

.channel .subscribe {
    text-transform: uppercase;
    color:var(--red-color);
    font-size:var(--font-medium);
}

/* Up Next */
.upNext{
    padding: 0 var(--padding);
}

.upNext > .title{
    font-size: var(--font-medium);
    color: var(--grey-dark-color);
    margin-bottom: calc(var(--padding) / 2);
}

.upNext .item{
    display:flex;
    margin-top: var(--padding);
}

.upNext .item .img{
    flex: 1 1 35%;
    margin-right:var(--padding);
}

.upNext .item .img img{
    width: 100%;
}

.upNext .item .info{
    flex: 1 1 60%;
}

.upNext .item .moreBtn{
    flex: 1 1 5%;
}

.upNext .item .info{
    display: flex;
    flex-direction: column;
}

.upNext .item .info .title{
    font-size: var(--font-small)
}

.upNext .item .info .name,
.upNext .item .info .views{
    font-size: var(--font-micro);
    color: var(--grey-dark-color);
}

.infoAndUpNext{
    display:flex;
    flex-direction:column;
}

/* 
media => all, print(페이지가 인쇄될 경우), 
screen(특정 너비 이상or이하가 될 경우 적용할 문장), speech
*/
@media screen and (min-width: 768px){
    .infoAndUpNext{
        flex-direction:row;
        margin:var(--padding) 0;
    }
}